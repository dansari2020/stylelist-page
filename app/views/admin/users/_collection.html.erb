<%#
# Collection

This partial is used on the `index` and `show` pages
to display a collection of resources in an HTML table.

## Local variables:

- `collection_presenter`:
  An instance of [Administrate::Page::Collection][1].
  The table presenter uses `ResourceDashboard::COLLECTION_ATTRIBUTES` to determine
  the columns displayed in the table
- `resources`:
  An ActiveModel::Relation collection of resources to be displayed in the table.
  By default, the number of resources is limited by pagination
  or by a hard limit to prevent excessive page load times

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>

<table class="min-w-full divide-y divide-gray-200" aria-labelledby="<%= table_title %>">
  <thead class="bg-gray-50">
    <tr>
      <% collection_presenter.attribute_types.each do |attr_name, attr_type| %>
        <th class="px-8 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider
        cell-label--<%= attr_type.html_class %>
        cell-label--<%= collection_presenter.ordered_html_class(attr_name) %>"
        scope="col"
        role="columnheader"
        aria-sort="<%= sort_order(collection_presenter.ordered_html_class(attr_name)) %>">
        <%= link_to(sanitized_order_params(page, collection_field_name).merge(
          collection_presenter.order_params_for(attr_name, key: collection_field_name)
        )) do %>
        <%= t(
          "helpers.label.#{collection_presenter.resource_name}.#{attr_name}",
          default: resource_class.human_attribute_name(attr_name),
        ).titleize %>
            <% if collection_presenter.ordered_by?(attr_name) %>
              <span class="cell-label__sort-indicator cell-label__sort-indicator--<%= collection_presenter.ordered_html_class(attr_name) %>">
                <svg aria-hidden="true">
                  <use xlink:href="#icon-up-caret" />
                </svg>
              </span>
            <% end %>
          <% end %>
        </th>
      <% end %>
      <% [collection_presenter.resource_name == "user",
          valid_action?(:edit, collection_presenter.resource_name),
          valid_action?(:destroy, collection_presenter.resource_name)].count(true).times do %>
        <th class="relative px-6 py-3" scope="col"></th>
      <% end %>
    </tr>
  </thead>

  <tbody class="bg-white divide-y divide-gray-200">
    <% resources.each do |resource| %>
      <tr class="js-table-row hover:bg-gray-100"
          <% if show_action? :show, resource %>
            <%= %(tabindex=0 role=link data-url=#{polymorphic_path([namespace, resource])}) %>
          <% end %>
          >
        <% collection_presenter.attributes_for(resource).each do |attribute| %>
          <td class="px-8 py-2 h-16 whitespace-nowrap cell-data--<%= attribute.html_class %>">
            <% if show_action? :show, resource -%>
              <a href="<%= polymorphic_path([namespace, resource]) -%>"
                 tabindex="-1"
                 class="action-show"
                 >
                <%= render_field attribute %>
              </a>
            <% else %>
              <%= render_field attribute %>
            <% end -%>
          </td>
        <% end %>
        <% if resource.is_a?(User) %>
        <td>
          <%= link_to(
            "Visit page",
            resource.url,
            class: "text-gray-500",
            target: "_blank"
          ) %>
        </td>
        <% end %>

        <% if valid_action? :edit, collection_presenter.resource_name %>
          <td><%= link_to(
            t("administrate.actions.edit"),
            [:edit, namespace, resource],
            class: "text-indigo-600 hover:text-indigo-900 font-normal text-sm",
          ) if show_action? :edit, resource%></td>
        <% end %>

        <% if valid_action? :destroy, collection_presenter.resource_name %>
          <td><%= link_to(
            t("administrate.actions.destroy"),
            [namespace, resource],
            class: "text-red-600 hover:text-red-900 font-normal text-sm",
            method: :delete,
            data: { confirm: t("administrate.actions.confirm") }
          ) if show_action? :destroy, resource %></td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>
