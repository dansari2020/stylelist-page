    <style>
  .length-of-hair-wrapper input[type="radio"] + label span {
    border: 1px solid rgba(0, 0, 0, 0.6);
    box-sizing: border-box;
    border-radius: 50px;
    color: rgba(0, 0, 0, 0.6);
  }
  .length-of-hair-wrapper input[type="radio"]:checked + label span {
    border: 1px solid #3374DE;
    color: #3374DE;
  }
</style>
<%= form_for(@portfolio, url: portfolio_path(@portfolio), html: { method: :put}) do |f| %>
  <div class="flex flex-col space-x-4 md:flex-row">
    <div class="relative block px-2 pt-8 border-r md:w-1/2 lg:w-2/5" x-data="{ tab : 'profile' }">
      <div class="p-8 mb-2 border-b">
        <h2 class="mb-4 text-xl leading-6">Length of Hair</h2>
        <div class="relative">
          <%= image_tag "girl.png", style: "width: 353px;height: 524px" %>
          <div class="flex flex-col flex-wrap length-of-hair-wrapper">
            <input type="hidden" name="portfolio[hair_length]" value="">
            <input class="hidden" type="radio" value="clipper" name="portfolio[hair_length]" id="porfolio_hair_length_clipper">
            <label data-value="clipper" class="absolute py-2 mb-2 mr-2 cursor-pointer" style="top: -2px" for="porfolio_hair_length_clipper">
              <span style="padding-left: 16px; padding-right: 16px;" class="py-2 text-sm bg-white rounded-full">Clipper</span>
            </label>
            <input class="hidden" type="radio" value="ear" name="portfolio[hair_length]" id="porfolio_hair_length_ear">
            <label data-value="ear" class="absolute py-2 mb-2 mr-2 cursor-pointer" style="top: 105px" for="porfolio_hair_length_ear">
              <span style="padding-left: 16px; padding-right: 16px;" class="py-2 text-sm bg-white rounded-full ">Ear</span>
            </label>
            <input class="hidden" type="radio" value="chin" name="portfolio[hair_length]" id="porfolio_hair_length_chin">
            <label data-value="chin" class="absolute py-2 mb-2 mr-2 cursor-pointer" style="top: 194px" for="porfolio_hair_length_chin">
              <span style="padding-left: 16px; padding-right: 16px;" class="py-2 text-sm bg-white rounded-full ">Chin</span>
            </label>
            <input class="hidden" type="radio" value="shoulder" name="portfolio[hair_length]" id="porfolio_hair_length_shoulder">
            <label data-value="shoulder" class="absolute py-2 mb-2 mr-2 cursor-pointer" style="top: 254px" for="porfolio_hair_length_shoulder">
              <span style="padding-left: 16px; padding-right: 16px;" class="py-2 text-sm bg-white rounded-full">Shoulder</span>
            </label>
            <input class="hidden" type="radio" value="armpit" name="portfolio[hair_length]" id="porfolio_hair_length_armpit">
            <label data-value="armpit" class="absolute py-2 mb-2 mr-2 cursor-pointer" style="top: 318px" for="porfolio_hair_length_armpit">
              <span style="padding-left: 16px; padding-right: 16px;" class="py-2 text-sm bg-white rounded-full">Armpit</span>
            </label>
            <input class="hidden" type="radio" value="mid_back" name="portfolio[hair_length]" id="porfolio_hair_length_mid_back">
            <label data-value="mid_back" class="absolute py-2 mb-2 mr-2 cursor-pointer" style="top: 386px" for="porfolio_hair_length_mid_back">
              <span style="padding-left: 16px; padding-right: 16px;" class="py-2 text-sm bg-white rounded-full">Mid back</span>
            </label>
            <input class="hidden" type="radio" value="taillbone" name="portfolio[hair_length]" id="porfolio_hair_length_taillbone">
            <label data-value="taillbone" class="absolute py-2 mb-2 mr-2 cursor-pointer" style="bottom: -10px" for="porfolio_hair_length_taillbone">
              <span style="padding-left: 16px; padding-right: 16px;" class="py-2 text-sm bg-white rounded-full">Taillbone</span>
            </label>
          </div>
        </div>
      </div>
    </div>
    <div class="px-8 py-12 md:overflow-y-scroll md:w-1/2 md:h-screen lg:w-3/5">
      <div class="grid grid-cols-3 m-4 space-x-4 md:grid-cols-5">
        <% Array.wrap(@portfolio.pictures).each do |picture| %>
          <div class="">
            <p class="py-2 pt-4 text-gray-600">
              <%= picture.blob.filename %>
            </p>
            <%= image_tag picture, class: "w-36 rounded-md"  %>
          </div>
        <% end %>
      </div>
      <div class="w-full">
        <%= f.text_area :description, autofocus: true, placeholder: "Add Description...", class: "w-full rounded-lg mb-4 border-none focus:border-gray-500 focus:outline-none autofill:bg-white" %>
      </div>
      <div class="w-full py-4 border-t">
        <label for="" class="font-bold text-md">Services Provided</label>
        <div class="flex flex-col w-full mt-4 md:inline-flex md:flex-row md:items-center">
          <div class="relative block w-full">
            <div x-data  data-tags='[<%= @portfolio.service_types.pluck(:name).map{|name| "\"#{name}\""}.join(',') %>]'
            data-tagIds='[<%= @portfolio.service_types.pluck(:id).map{|id| "\"#{id}\""}.join(',') %>]'>
              <div x-data="tagSelect()" x-init="init('parentEl')" @click.away="clearSearch()" @keydown.escape="clearSearch()">
                <div class="relative w-full overflow-y-scroll rounded" @keydown.enter.prevent="addTag(textInput)" @click.prevent="focusTag()">
                  <div class="w-full">
                    <div :class="[open ? 'block' : 'hidden']">
                      <div class="absolute left-0 z-40 w-full m-1">
                        <div class="py-1 text-sm bg-white border border-gray-300 rounded shadow-lg">
                          <a @click.prevent="addTag(textInput)" class="block px-5 py-1 cursor-pointer hover:text-white hover:bg-indigo-600">Add service type "<span class="font-semibold" x-text="textInput"></span>"</a>
                        </div>
                      </div>
                    </div>
                    <input x-model="textInput" x-ref="textInput" @input="search($event.target.value)" class="inline-block w-full p-2 leading-tight text-gray-700 bg-white border rounded" placeholder="i.e. Cut, Color, Style">
                    <p class="my-2 text-xs text-gray-500">Seperate services with a comma</p>
                  </div>
                  <!-- selections -->
                  <template x-for="(tag, index) in tags">
                    <div class="inline-flex items-center m-1 text-sm text-center border border-blue-500 rounded-full">
                      <input type="hidden" name="portfolio[service_types_attributes][][id]" :value="tagIds[index] !== undefined ? tagIds[index] : ''" />
                      <input type="hidden" name="portfolio[service_types_attributes][][name]" :value="tag" />
                      <input type="hidden" name="portfolio[service_types_attributes][][_destroy]"/>
                      <span class="max-w-xs px-2 ml-2 mr-1 leading-relaxed text-blue-500 truncate" x-text="tag"></span>
                      <button @click.prevent="removeTag(index)" class="inline-block w-6 h-8 text-blue-500 align-middle hover:text-gray-600 focus:outline-none">
                        <svg class="w-6 h-6 mx-auto text-blue-500 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill=""><path fill-rule="evenodd" d="M15.78 14.36a1 1 0 0 1-1.42 1.42l-2.82-2.83-2.83 2.83a1 1 0 1 1-1.42-1.42l2.83-2.82L7.3 8.7a1 1 0 0 1 1.42-1.42l2.83 2.83 2.82-2.83a1 1 0 0 1 1.42 1.42l-2.83 2.83 2.83 2.82z"/></svg>
                      </button>
                    </div>
                  </template>
                  <template x-for="(tag, index) in removeTags">
                    <div :data-id="tag">
                      <input type="hidden" name="portfolio[service_types_attributes][][id]" :value="tag" />
                      <input type="hidden" name="portfolio[service_types_attributes][][name]" />
                      <input type="hidden" name="portfolio[service_types_attributes][][_destroy]" value="true" />
                    </div>
                  </template>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="w-full py-4 border-t">
        <label for="" class="font-bold text-md">Hair Type</label>
        <div class="flex flex-col w-full mt-4 md:inline-flex md:flex-row md:items-center">
          <div class="relative block w-full">
            <div x-data  data-tags='[<%= @portfolio.hair_types.pluck(:name).map{|name| "\"#{name}\""}.join(',') %>]'
            data-tagIds='[<%= @portfolio.hair_types.pluck(:id).map{|id| "\"#{id}\""}.join(',') %>]'>
              <div x-data="tagSelect()" x-init="init('parentEl')" @click.away="clearSearch()" @keydown.escape="clearSearch()">
                <div class="relative w-full overflow-y-scroll rounded" @keydown.enter.prevent="addTag(textInput)" @click.prevent="focusTag()">
                  <div class="w-full">
                    <div :class="[open ? 'block' : 'hidden']">
                      <div class="absolute left-0 z-40 w-full m-1">
                        <div class="py-1 text-sm bg-white border border-gray-300 rounded shadow-lg">
                          <a @click.prevent="addTag(textInput)" class="block px-5 py-1 cursor-pointer hover:text-white hover:bg-indigo-600">Add hair type "<span class="font-semibold" x-text="textInput"></span>"</a>
                        </div>
                      </div>
                    </div>
                    <input x-model="textInput" x-ref="textInput" @input="search($event.target.value)" class="inline-block w-full p-2 leading-tight text-gray-700 bg-white border rounded" placeholder="i.e. Straight, Wavy, Curly">
                    <p class="my-2 text-xs text-gray-500">Seperate hair types with a comma</p>
                  </div>
                  <!-- selections -->
                  <template x-for="(tag, index) in tags">
                    <div class="inline-flex items-center m-1 text-sm text-center border border-blue-500 rounded-full">
                      <input type="hidden" name="portfolio[hair_types_attributes][][id]" :value="tagIds[index] !== undefined ? tagIds[index] : ''" />
                      <input type="hidden" name="portfolio[hair_types_attributes][][name]" :value="tag" />
                      <input type="hidden" name="portfolio[hair_types_attributes][][_destroy]"/>
                      <span class="max-w-xs px-2 ml-2 mr-1 leading-relaxed text-blue-500 truncate" x-text="tag"></span>
                      <button @click.prevent="removeTag(index)" class="inline-block w-6 h-8 text-blue-500 align-middle hover:text-gray-600 focus:outline-none">
                        <svg class="w-6 h-6 mx-auto text-blue-500 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill=""><path fill-rule="evenodd" d="M15.78 14.36a1 1 0 0 1-1.42 1.42l-2.82-2.83-2.83 2.83a1 1 0 1 1-1.42-1.42l2.83-2.82L7.3 8.7a1 1 0 0 1 1.42-1.42l2.83 2.83 2.82-2.83a1 1 0 0 1 1.42 1.42l-2.83 2.83 2.83 2.82z"/></svg>
                      </button>
                    </div>
                  </template>
                  <template x-for="(tag, index) in removeTags">
                    <input type="hidden" name="portfolio[hair_types_attributes][][id]" :value="tag" />
                    <input type="hidden" name="portfolio[hair_types_attributes][][name]" />
                    <input type="hidden" name="portfolio[hair_types_attributes][][_destroy]" value="true" />
                  </template>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="flex justify-between w-full py-4 border-t">
        <div>
          <%= f.submit "Save and add another photo", class: "bg-white text-blue-500 cursor-pointer" %>
        </div>
        <div class="text-right actions">
          <%= link_to "Cancel", root_url, class: "text-black text-white text-blue-500 px-4 py-2 rounded-md text-sm font-medium" %>
          <%= f.submit "Save", class: "text-black text-white bg-blue-500 hover:bg-blue-700 px-4 py-2 rounded-md text-sm font-medium" %>
        </div>
      </div>
      <div id="photos" class="flex mb-12 space-x-4"></div>
    </div>
  </div>
<% end %>
<script>
  function tagSelect() {
    return {
      open: false,
      textInput: '',
      tags: [],
      tagIds: [],
      removeTags: [],
      init() {
        this.tags = JSON.parse(this.$el.parentNode.getAttribute('data-tags'));
        this.tagIds = JSON.parse(this.$el.parentNode.getAttribute('data-tagIds'));
      },
      addTag(tag) {
        tag = tag.trim()
        if (tag != "" && !this.hasTag(tag)) {
          this.tags.push( tag )
        }
        this.clearSearch()
        this.$refs.textInput.focus()
        this.fireTagsUpdateEvent()
      },
      fireTagsUpdateEvent() {
        this.$el.dispatchEvent(new CustomEvent('tags-update', {
          detail: { tags: this.tags, removeTags: this.removeTags },
          bubbles: true,
        }));
      },
      hasTag(tag) {
        var tag = this.tags.find(e => {
          return e.toLowerCase() === tag.toLowerCase()
        })
        return tag != undefined
      },
      removeTag(index) {
        if (this.tagIds.length >= (index + 1) && this.tagIds[index] !== undefined) {
          this.removeTags.push( this.tagIds[index] )
        }
        this.tags.splice(index, 1)
        this.fireTagsUpdateEvent()
      },
      search(q) {
        if ( q.includes(",") ) {
          q.split(",").forEach(function(val) {
            this.addTag(val)
          }, this)
        }
        this.toggleSearch()
      },
      clearSearch() {
        this.textInput = ''
        this.toggleSearch()
      },
      toggleSearch() {
        this.open = this.textInput != ''
      },
      focusTag() {
        this.clearSearch()
        this.$refs.textInput.focus()
      }
    }
  }
  
  function readFile(input) {
    counter = input.files.length;
  		for(x = 0; x<counter; x++){
  			if (input.files && input.files[x]) {
  
  				var reader = new FileReader();
  
  				reader.onload = function (e) {
        	document.getElementById("photos").innerHTML += '<div class="w-1/2 md:w-1/3"><img src="'+e.target.result+'" class="img-thumbnail"></div>';
  				};
  
  				reader.readAsDataURL(input.files[x]);
  			}
    }
  }
</script>
