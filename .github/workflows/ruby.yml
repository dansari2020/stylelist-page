# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        ruby-version: ['2.7.2']

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Set up Ruby 2.7.2
        uses: ruby/setup-ruby@v1.30.1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - name: Install PostgreSQL Client
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Run bundle install
        env:
          RAILS_ENV: test
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build and test with rspec
        env:
          RAILS_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          RUBYOPT: '-W:no-deprecated -W:no-experimental'
        run: |
          bundle exec rake db:setup
          bundle exec rspec
