# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

env:
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_HOST: localhost
  RAILS_ENV: test

name: Ruby

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    strategy:
      matrix:
        ruby-version: ['2.7.2']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Install PostgreSQL Client
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Gem cache
        id: cache-bundle
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundle-${{ hashFiles('**/Gemfile.lock') }}

      - name: Run bundle install
        env:
          RAILS_ENV: test
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      # NOTE: Yarn cache doesn't seem to be working quite yet
      - name: Get yarn cache dir
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        id: cache-yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn
        run: npm install -g yarn

      - name: setup databases
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          RAILS_ENV: test
        run: |
          cp config/database.yml.sample config/database.yml
          bundle exec rake db:setup

      - name: Run tests
        run: |
          bundle exec rspec
